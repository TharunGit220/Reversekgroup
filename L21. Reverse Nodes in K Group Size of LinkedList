import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Queue;

class Node {
    Node next;
    Node back;
    int numb;

    public Node(int numb) {
        this.numb = numb;
    }

    public Node(int Numb, Node next, Node back) {
        this.numb = Numb;
        this.next = next;
        this.back = back;
    }
}

public class User {

    public static Node arrToLinkedList(int[] arr) {
        Node head = new Node(arr[0]);
        Node prev = head;

        for (int i = 1; i < arr.length; i++) {
            Node temp = new Node(arr[i]);
            prev.next = temp;
            prev = temp;
        }
        return head;
    }

    public static Node reversekgroup(Node head,int k){
        Node temp = head; Node prev = null;

        while (temp != null) {
            Node kthnode = findkthnode(temp,k);
            
            if (kthnode == null) {
                if (prev != null) {
                    prev.next = temp;
                }
                break;
            }
            Node nextnode = kthnode.next;
            kthnode.next = null;

            Node newhead = reverse(temp);
            
            if (temp == head) {
                head = newhead;
            }
            else{
                prev.next = newhead;
            }
            prev = temp;
            temp = nextnode;
        }
        
        return head;
        
    }
    private static Node reverse(Node head) {
        Node temp = head;
        Node prev = null;
        Node front = null;

        while (temp != null) {
            front = temp.next;
            temp.next = prev;
            prev = temp;
            temp = front;
        }
        return prev;
    }

    private static Node findkthnode(Node temp, int k) {
        
        while (temp != null) {
            if (k==1) {
                break;
            }
            k--;
            temp = temp.next;
        }
        return temp;
    }

    public static void Print(Node head) {
        while (head != null) {
            System.out.print(head.numb +" ");
            head = head.next;
        }
    }
    public static void main(String[] args) {

        int[] arr = {1,2,3,4,5,6,7,8,9,10};
        int[] arr2 = {1,5};
        int[] arr3 = {1,1,3,7};
        int[] arr4 = {8};
        Node head = arrToLinkedList(arr);
        Node head2 = arrToLinkedList(arr2);
        Node head3 = arrToLinkedList(arr3);
        Node head4 = arrToLinkedList(arr4);

        head= reversekgroup(head,3);
        Print(head);

        
    }

}
