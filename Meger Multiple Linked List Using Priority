import java.util.Comparator;
import java.util.PriorityQueue;
import java.util.Queue;

class Node {
    Node next;
    Node back;
    int numb;

    public Node(int numb) {
        this.numb = numb;
    }

    public Node(int Numb, Node next, Node back) {
        this.numb = Numb;
        this.next = next;
        this.back = back;
    }
}

public class App {

    public static Node arrToLinkedList(int[] arr) {
        Node head = new Node(arr[0]);
        Node prev = head;

        for (int i = 1; i < arr.length; i++) {
            Node temp = new Node(arr[i]);
            prev.next = temp;
            prev = temp;
        }
        return head;
    }



    public static Node PQtosortalinkedlist(Node head,Node head2,Node head3,Node head4){
        Node dummyhead = new Node(0); Node temp = dummyhead;
        Node[] arr = {head,head2,head3,head4};
        Queue<PQ> li = new PriorityQueue<>(Comparator.comparingInt(PQ::numb)); 
 
        // for(Node node : arr){
        //     if (node != null) {
        //         li.add(new PQ(node.numb, node));
        //     }
        // }
        for(int i=0;i<arr.length;i++){
            li.add(new PQ(arr[i].numb, arr[i]));
        }
        
        while (!li.isEmpty()) {
            PQ p = li.poll();
            temp.next = p.node;

            if (p.node.next != null) {
                li.add(new PQ(p.node.next.numb, p.node.next));
            }

            temp = temp.next;
        }
        return dummyhead.next;        
    }
    public static void Print(Node head) {
        while (head != null) {
            System.out.println(head.numb);
            head = head.next;
        }
    }
    public static void main(String[] args) {

        int[] arr = {2, 4, 6};
        int[] arr2 = {1,5};
        int[] arr3 = {1,1,3,7};
        int[] arr4 = {8};
        Node head = arrToLinkedList(arr);
        Node head2 = arrToLinkedList(arr2);
        Node head3 = arrToLinkedList(arr3);
        Node head4 = arrToLinkedList(arr4);

        head = PQtosortalinkedlist(head,head2,head3,head4);

        Print(head);
        
    }

    // while (!li.isEmpty()) {
    //     PQ pq = li.poll();
    //     System.out.println("PQ Numb: " + pq.numb() + ", Node Numb: " + pq.node().numb);
    // }
    static record PQ(int numb, Node node) {}
}

